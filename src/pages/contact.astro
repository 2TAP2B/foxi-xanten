---
// Components
// - Layout
import Layout from '../layouts/Layout.astro'
import Button from '../components/ui/Button.astro'
// - UI
import FormHero from '../components/blocks/hero/ContactHero.astro'
import CTA from '../components/blocks/CTA/BasicDark.astro'
import ContactCards from '../components/blocks/contact/ContactCards.astro'
import SocialProof from '../components/blocks/socialproof/Basic.astro'

// Content
// - SEO
const SEO = {
	title: 'xanten.cc | Selbstbestimmt im digitalen Raum',
	description:
		'Wir bieten digitale Dienste f체r ein soziales Miteinander und st채rken die Nachbarschaft in Xanten.'
}
// - Page Header
const header = {
	title: 'Get Answers to Your <strong>Foxi</strong> Questions.',
	text: "Whether you have a question, need support, or just want to share your feedback, we're all ears. Reach out to us and we'll get back to you as soon as possible."
}
---

<Layout title={SEO.title} description={SEO.description}>

	<ContactCards classes="dark:bg-neutral-950/80" />

	<!-- // Styling Requires Tailwind CSS -->
<form
action="https://api.web3forms.com/submit"
method="POST"
id="form"
class="needs-validation"
data-astro-reload
novalidate>

 <!-- Add your Web3Forms Access Key -->
<input type="hidden" name="access_key" value="4b95559b-a44d-434b-9af4-d35129df9b17" />

<div class="max-w-lg mx-auto rounded-lg shadow-md">
	<input type="checkbox" class="hidden" style="display:none" name="botcheck" />
	<div class="mb-5">
	  <input
		type="text"
		placeholder="Name"
		required
		class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
		name="name"
	  />
	  <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
		Bitte gebe deinen vollst채ndigen Namen an.
	  </div>
	</div>
	<div class="mb-5">
	  <label for="email_address" class="sr-only">Email Addresse</label>
	  <input
		id="email_address"
		type="email"
		placeholder="Email Addresse"
		name="email"
		required
		class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
	  />
	  <div class="empty-feedback text-red-400 text-sm mt-1">
		Bitte gebe deine E-Mail Adresse an.
	  </div>
	  <div class="invalid-feedback text-red-400 text-sm mt-1">
		Bitte gebe eine g체ltige E-Mail Adresse an.
	  </div>
	</div>
	<div class="mb-5">
	  <textarea
		name="message"
		required
		placeholder="Deine Nachricht"
		class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none h-36 focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
	  ></textarea>
	  <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
		Bitte gebe deine Nachricht ein.
	  </div>
	</div>
	<Button type="submit" size="lg" block>Abschicken</Button>
	<div id="result" class="mt-3 text-center"></div>
  </div>
  

<style>
.invalid-feedback,
.empty-feedback {
  display: none;
}

.was-validated :placeholder-shown:invalid ~ .empty-feedback {
  display: block;
}

.was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
  display: block;
}

.is-invalid,
.was-validated :invalid {
  border-color: #dc3545;
}
</style>

<script is:inline>

// use astro:page-load event if you are using View Transitions

document.addEventListener("DOMContentLoaded", () => {

	const form = document.getElementById("form");
	const result = document.getElementById("result");

	form.addEventListener("submit", function (e) {
	  e.preventDefault();
	  form.classList.add("was-validated");
	  if (!form.checkValidity()) {
		form.querySelectorAll(":invalid")[0].focus();
		return;
	  }
	  const formData = new FormData(form);
	  const object = Object.fromEntries(formData);
	  const json = JSON.stringify(object);

	  result.innerHTML = "Sending...";

	  fetch("https://api.web3forms.com/submit", {
		method: "POST",
		headers: {
		  "Content-Type": "application/json",
		  Accept: "application/json",
		},
		body: json,
	  })
		.then(async (response) => {
		  let json = await response.json();
		  if (response.status == 200) {
			result.classList.add("text-green-500");
			result.innerHTML = json.message;
		  } else {
			console.log(response);
			result.classList.add("text-red-500");
			result.innerHTML = json.message;
		  }
		})
		.catch((error) => {
		  console.log(error);
		  result.innerHTML = "Something went wrong!";
		})
		.then(function () {
		  form.reset();
		  form.classList.remove("was-validated");
		  setTimeout(() => {
			result.style.display = "none";
		  }, 5000);
		});
	});
  },
  { once: true },
);
</script>
<br></br>

</Layout>

